<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="EnvDTE.dll" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Threading.Tasks" #>
<#@ assembly name="Microsoft.CodeAnalysis" #>
<#@ assembly name="Microsoft.CodeAnalysis.CSharp.Workspaces" #>
<#@ assembly name="Microsoft.CodeAnalysis.Workspaces.Desktop" #>
<#@ assembly name="Microsoft.CodeAnalysis.Workspaces" #>
<#@ assembly name="System.Runtime" #>
<#@ import namespace="Microsoft.CodeAnalysis" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ import namespace="Microsoft.CodeAnalysis.MSBuild" #>
<#
    EnvDTE.DTE dte = (this.Host as IServiceProvider).GetService(typeof(EnvDTE.DTE)) as EnvDTE.DTE;
    string solutionPath = System.IO.Path.GetDirectoryName(dte.Solution.FullName);
    MSBuildWorkspace msWorkspace = MSBuildWorkspace.Create();

    Solution solution = msWorkspace.OpenSolutionAsync(dte.Solution.FullName).Result;
    Project coreProject = solution.Projects.First(p => p.Name == "BGC.Core");
    Compilation compiledProject = coreProject.GetCompilationAsync().Result;
    WriteLine(compiledProject.);
#>