@using System.Globalization;

@model GlossaryListViewModel

@{
    ViewBag.Title = Localize(Administration.Glossary.ListGlossary.Glossary);
}

@section sidebar_content
{
    <div class="sidebar-actions-container">
        <a href="@Url.Action(MVC.Administration.Glossary.Edit())" class="btn btn-success btn-block">
            <table>
                <tbody>
                    <tr>
                        <td>
                            <i class="ace-icon glyphicon glyphicon-plus"></i>
                        </td>
                        <td class="text-left">
                            @Localize(Administration.Glossary.Edit.AddEntry)
                        </td>
                    </tr>
                </tbody>
            </table>
        </a>
    </div>
}

<div class="page-content">
    <h2 class="header lighter green">@ViewBag.Title</h2>

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th class="text-center">#</th>
                <th>@Localize(Administration.Glossary.ListGlossary.TermName)</th>
                <th>@Localize(Administration.Glossary.ListGlossary.InOtherLanguages)</th>
                <th>@Localize(Administration.Glossary.ListGlossary.Definition)</th>
            </tr>
        </thead>
        <colgroup>
            <col style="width: 20%" />
            <col style="width: 15%" />
            <col style="width: 20%" />
            <col />
        </colgroup>
        <tbody>
            @foreach (GlossaryEntryViewModel entry in Model.Entries)
            {
                <tr>
                    <td class="text-center">@entry.Id</td>
                    <td>
                        @Html.ActionLink(entry.GetDefinitionsInLocale(CurrentLocale).First().Term, MVC.Administration.Glossary.Edit(entry.Id))
                    </td>
                    <td>
                        <ul class="list-inline">
                            @{
                                var aliasLanguages = new HashSet<CultureInfo>(SupportedLanguages.Except(new[] { CurrentLocale }));
                                foreach (GlossaryDefinitionViewModel def in entry.GetDefinitionsInLocale(aliasLanguages))
                                {
                                    <li>@def.Definition</li>
                                }
                            }
                        </ul>
                    </td>
                    <td>
                        @{
                            string definition = entry.GetDefinitionsInLocale(CurrentLocale).First().Definition;
                            if (definition.Length > 100)
                            {
                                <span>@(new string(definition.Take(100).ToArray()))...</span>
                            }
                            else
                            {
                                <span>@definition</span>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>