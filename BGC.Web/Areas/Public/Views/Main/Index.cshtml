@using System.Globalization;
@using System.Text.RegularExpressions;
@using BGC.Web.Controllers;

@model IndexViewModel

@{
    ViewBag.Title = "Index";
}

@if (Model.Alphabet.Length == 1)
{
    <div class="text-center">
        <label class="text-primary">@Model.Alphabet[0]</label>
    </div>
    if (Model.Articles.ContainsKey(Model.Alphabet[0]))
    {
        <div class="col-md-2 col-md-offset-2">
            @foreach (ComposerArticle link in Model.Articles[Model.Alphabet[0]].Where((m, index) => index % 3 == 0))
            {
                @Html.ActionLink(link.LocalizedName.GetEasternOrderFullName(), MVC.Public.Main.Read(link.Composer.Id))
            }
        </div>
        <div class="col-md-2">
            @foreach (ComposerArticle link in Model.Articles[Model.Alphabet[0]].Where((m, index) => index % 3 == 1))
            {
                @Html.ActionLink(link.LocalizedName.GetEasternOrderFullName(), MVC.Public.Main.Read(link.Composer.Id))
            }
        </div>
        <div class="col-md-2">
            @foreach (ComposerArticle link in Model.Articles[Model.Alphabet[0]].Where((m, index) => index % 3 == 2))
            {
                @Html.ActionLink(link.LocalizedName.GetEasternOrderFullName(), MVC.Public.Main.Read(link.Composer.Id))
            }
        </div>
    }
    else
    {
        <div class="text-center">
            @Localize(Public.Main.Index.NoArticles)
        </div>
    }
}
else
{
    <div class="panel panel-default emphasis-element">
        <div class="panel-body">
            <table class="fuck-css-centering emphasis-element">
                <tbody>
                    <tr>
                        <td>
                            <div class="text-center">
                                <h2>@Localize(Public.Main.Index.Welcome)</h2>
                            </div>
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @using (Html.BeginForm(MVC.Public.Main.ActionNames.Search, MVC.Public.Main.Name, FormMethod.Get, new { @class = "searchForm", target = "_self", role = "search" }))
                            {
                                <table class="fuck-css-centering stretch">
                                    <tbody>
                                        <tr>
                                            <td>
                                                <input name="query" class="form-control input-lg" placeholder="@Localize(Public.Main.SearchCaption)" />
                                            </td>
                                            <td class="fit-content">
                                                <button type="submit" class="btn btn-lg btn-primary">
                                                    <i class="glyphicon glyphicon-search"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-offset-3 col-lg-6">
            <div class="captioned-separator block-before-lg">
                <a class="btn btn-primary" data-toggle="collapse" data-target="#browseIndex">
                    <i data-icon-hide="ace-icon glyphicon glyphicon-triangle-bottom" data-icon-show="ace-icon glyphicon glyphicon-triangle-right" class="ace-icon glyphicon glyphicon-triangle-right"></i>
                    @Localize(Public.Main.Index.OrBrowse)
                </a>
            </div>
        </div>
    </div>
    <div id="browseIndex" class="collapse well">
        <div class="text-center">
            @for (int i = 0; i < Model.Alphabet.Length; i++)
            {
                char group = Model.Alphabet[i];
                if (Model.Articles.ContainsKey(group))
                {
                    <div class="dropdown center">
                        @Html.ActionLink(group.ToString(), MVC.Public.Main.Index(group), new { @class = "dropbtn center text-primary" })
                        <div class="dropdown-content">
                            @foreach (ComposerArticle link in Model.Articles.ContainsKey(group) ? Model.Articles[group] : Enumerable.Empty<ComposerArticle>())
                            {
                                Html.ActionLink(link.LocalizedName.GetEasternOrderFullName(), MVC.Public.Main.Read(link.Composer.Id));
                            }
                        </div>
                    </div>
                }
                else
                {
                    <span class="disabled text-medium">@group</span>
                }
            }
        </div>
    </div>
}

@section footer {
    <ul class="list-inline">
        <li>@Localize(Public.Main.Index.InOtherLanguages):</li>
        @foreach (CultureInfo language in SupportedLanguages)
        {
            <li>
                @{
                    string languageName = Regex.Replace(language.NativeName, @"\s\([\w\d\s]+\)", ""); @* remove the region name and leave the language name only *@
                    if (!language.Equals(CurrentLocale))
                    {
                        RouteValueDictionary newRouteData = new RouteValueDictionary(ViewContext.RouteData.Values);
                        newRouteData[(ViewContext.Controller as BgcControllerBase).ApplicationProfile.LocaleRouteTokenName] = language.Name;

                        @Html.ActionLink(languageName, MVC.Public.Main.ActionNames.Index, newRouteData)
                    }
                    else
                    {
                        <span>@languageName</span>
                    }
                    }
            </li>
        }
    </ul>
}