@using System.Globalization;
@using System.Text.RegularExpressions;
@using BGC.Web.Controllers;

@model SearchResultViewModel

@{
    ViewBag.Title = "Search";
}

<h2>Search</h2>
@if (Model.Results.Any())
{
    <ul>
        @foreach (KeyValuePair<Guid, string> kvp in Model.Results)
        {
            <li>
                @Html.ActionLink(kvp.Value, MVC.Public.Main.Read().AddRouteValue(MVC.Public.Main.ReadParams.composerId, kvp.Key))
            </li>
        }
    </ul>
}
else
{
    <span>@Localize(Public.Main.Search.NoResults)</span>
}

@section footer {
    <ul class="list-inline">
        <li>@Localize(Public.Main.Index.InOtherLanguages):</li>
        @foreach (CultureInfo language in SupportedLanguages)
        {
            <li>
                @{
                    string languageName = Regex.Replace(language.NativeName, @"\s\([\w\d\s]+\)", ""); @* remove the region name and leave the language name only *@
                if (!language.Equals(CurrentLocale))
                {
                    RouteValueDictionary newRouteData = new RouteValueDictionary(ViewContext.RouteData.Values);
                    newRouteData[(ViewContext.Controller as BgcControllerBase).ApplicationProfile.LocaleRouteTokenName] = language.Name;

                    @Html.ActionLink(languageName, MVC.Public.Main.ActionNames.Index, newRouteData)
                }
                else
                {
                    <span>@languageName</span>
                }
                }
            </li>
        }
    </ul>
}