@using System.Globalization;
@using System.Text.RegularExpressions;
@using BGC.Web.Controllers;

@model ArticleViewModel

@{
    ViewBag.Title = "Read";
}

@section scripts
{
}

@section additionalContent
{
    <div id="translations" class="col-lg-offset-4">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">@Localize(Public.Main.Read.LanguagesSelectionCaption)</h3>
            </div>
            <div class="panel-body">
            @{
                Guid composerId = Guid.Parse(Request.QueryString[MVC.Public.Main.ReadParams.composerId]);
                foreach (CultureInfo language in SupportedLanguages)
                {
                    <div>
                        @{
                        string languageName = Regex.Replace(language.NativeName, @"\s\([\w\d\s]+\)", ""); @* remove the region name and leave the language name only *@
                        if (!language.Equals(CurrentLocale))
                        {
                            RouteValueDictionary newRouteData = new RouteValueDictionary(ViewContext.RouteData.Values);
                            newRouteData[(ViewContext.Controller as BgcControllerBase).ApplicationProfile.LocaleRouteTokenName] = language.Name;
                            newRouteData.Add(MVC.Public.Main.ReadParams.composerId, composerId);

                            @Html.ActionLink(languageName, MVC.Public.Main.ActionNames.Read, newRouteData)
                        }
                        else
                        {
                            <span>@languageName</span>
                        }
                    }
                    </div>
                }
            }
            </div>
        </div>
    </div>
}

@section header
{
    <div class="col-lg-3"></div>
    <div class="col-lg-8">
        <h2>@Model.Title</h2>
    </div>
}

<div>
    <div class="panel panel-default">
        <article class="panel-body">
            @Html.Raw(Model.Text)
        </article>
    </div>
</div>